---
- name: Create the Geoserver download directory {{ geoserver_download_directory }}
  file: path={{ geoserver_download_directory }} state=directory

- name: Create the Geoserver data directory {{ geoserver_data_directory }}
  file:
    path: "{{ geoserver_data_directory }}"
    state: directory
    owner: "{{ geoserver_user }}"
    group: "{{ geoserver_user_group }}"
  when: geoserver_create_data_dir

- name: Create the Geoserver log directory {{ geoserver_log_directory }}
  file:
    path: "{{ geoserver_log_directory }}"
    state: directory
    owner: "{{ geoserver_user }}"
    group: "{{ geoserver_user_group }}"

- name: Create the Geoserver directory {{ geoserver_instance_path_versioned }}
  file:
    path: "{{ geoserver_instance_path_versioned }}"
    state: directory
    owner: "{{ geoserver_user }}"
    group: "{{ geoserver_user_group }}"
  register: geoserver_instance_folder

- name: set fact zip file path
  set_fact:
     geoserver_download_zip: "{{ geoserver_download_directory }}/geoserver-{{ geoserver_version }}-bin.zip"

- name: find out {{ geoserver_download_zip }} file exists or not
  stat:
    path: "{{ geoserver_download_zip }}"
  register: geoserver_download_zip_file

- name: Download the Geoserver file distribution
  get_url: url={{ geoserver_download_url }} dest={{ geoserver_download_directory }} validate_certs=False
  register: geoserver_download
  when: geoserver_download_zip_file.stat.exists == false

- name: Unpack the Geoserver zip file to {{ geoserver_instance_path_versioned }}
  unarchive:
    copy: no
    src: "{{ geoserver_download_zip }}"
    dest: "{{ geoserver_instance_path_versioned }}"
  when: geoserver_download is changed or geoserver_instance_folder is changed